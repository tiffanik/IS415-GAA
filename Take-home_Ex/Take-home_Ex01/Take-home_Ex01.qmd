---
title: "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of functional and non-function water points in Osun State, Nigeria"

date : "2 February 2023"
date-modified : "`r Sys.Date()`"
format : html  
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# **1 Overview**

### **1.1 Setting the Scene**

![](/images/UN0396479.jpg)

40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security.

To address the issue of providing clean and sustainable water supply to the rural community, a global [Water Point Data Exchange (WPdx)](https://www.waterpointdata.org/about/) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on [WPDx Data Standard](https://www.waterpointdata.org/wp-content/uploads/2021/04/WPDx_Data_Standard.pdf).

### **1.2 Objectives**

Geospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate geospatial data wrangling methods to prepare the data for water point mapping study. For the purpose of this study, Nigeria will be used as the study country.

### **1.3 The Data**

```{r}
pacman::p_load(sf, tidyverse, funModeling, raster, spatstat, tmap, maptools, sfdep)
```

#### **1.3.1 Apstial data**

```{r}
wp_nga <- read_csv("data/aspatial/wpdx__ .csv") %>%
  filter(`#clean_country_name` == "Nigeria")
```

#### **1.3.2 Geospatial data**

```{r}
geoNGA <- st_read("data/geospatial/",
                  layer = "geoBoundaries-NGA-ADM2") %>%
  st_transform(crs = 26392)
```

```{r}
NGA <- st_read("data/geospatial/",
               layer = "nga_admbnda_adm2_osgof_20190417") %>%
  st_transform(crs = 26392)
```

#### 

1.3.3 **Converting water point data into sf point features**

```{r}
wp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)
wp_nga
```

```{r}
wp_sf <- st_sf(wp_nga, crs=4326)
wp_sf
```

**1.3.4 Transforming into Nigeria projected coordinate system**

```{r}
wp_sf <- wp_sf %>%
  st_transform(crs = 26392)
```

#### **1.3.4 Geospatial Data Cleaning**

##### **1.3.4.1 Excluding redundent fields**

```{r}
NGA <- NGA %>%
   dplyr::select(c(3:4, 8:9))
```

##### 1.3.4.2 **Checking for duplicate name**

```{r}
NGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]
```

```{r}
NGA$ADM2_EN[94] <- "Bassa, Kogi"
NGA$ADM2_EN[95] <- "Bassa, Plateau"
NGA$ADM2_EN[304] <- "Ifelodun, Kwara"
NGA$ADM2_EN[305] <- "Ifelodun, Osun"
NGA$ADM2_EN[355] <- "Irepodun, Kwara"
NGA$ADM2_EN[356] <- "Irepodun, Osun"
NGA$ADM2_EN[519] <- "Nasarawa, Kano"
NGA$ADM2_EN[520] <- "Nasarawa, Nasarawa"
NGA$ADM2_EN[546] <- "Obi, Benue"
NGA$ADM2_EN[547] <- "Obi, Nasarawa"
NGA$ADM2_EN[693] <- "Surulere, Lagos"
NGA$ADM2_EN[694] <- "Surulere, Oyo"
```

```{r}
NGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]
```

### 1.3.5 **Data Wrangling for Water Point Data**

```{r}
funModeling::freq(data = wp_sf,
     input = '#status_clean')
```

```{r}
wp_sf_nga <- wp_sf %>% 
  rename(status_clean = '#status_clean') %>%
  dplyr::select(status_clean) %>%
  mutate(status_clean = replace_na(
    status_clean, "unknown"))
```

**1.3.5.1 Extracting Water Point Data**

```{r}
wp_functional <- wp_sf_nga %>%
  filter(status_clean %in%
           c("Functional",
             "Functional but not in use",
             "Functional but needs repair"))
```

```{r}
wp_nonfunctional <- wp_sf_nga %>%
  filter(status_clean %in%
           c("Abandoned/Decommissioned",
             "Abandoned",
             "Non-Functional due to dry season",
             "Non-Functional",
             "Non functional due to dry season"))
```

```{r}
wp_unknown <- wp_sf_nga %>%
  filter(status_clean == "unknown")
```

```{r}
funModeling::freq(data = wp_functional,
     input = 'status_clean')
```

```{r}
funModeling::freq(data = wp_nonfunctional,
     input = 'status_clean')
```

```{r}
funModeling::freq(data = wp_unknown,
     input = 'status_clean')
```

# 2 Exploratory Spatial Data Analysis (ESDA)

### 

2.1 Derive kernel density maps of functional water points

```{r}
plot(wp_functional)

```

```{r}
summary(wp_functional)
```

```{r}
any(duplicated(wp_functional))
sum(multiplicity(wp_functional) > 1)
```

```{r}
library(tmap)
wp_func <- as_Spatial(wp_functional)
wp_func
```

```{r}
wp_f_sp <- as(wp_func, "SpatialPoints")
wp_f_sp
```

```{r}
wp_functional_ppp <- as(wp_f_sp, "ppp")
wp_functional_ppp
```

```{r}
plot(wp_functional_ppp)
```

```{r}
summary(wp_functional_ppp)
```

2.1.1 Handling duplicated points

```{r}
any(duplicated(wp_functional_ppp))

sum(multiplicity(wp_functional_ppp) > 1)
```

```{r}
kde_wp_functional_bw <- density(wp_functional_ppp,
                              sigma=bw.diggle,
                              edge=TRUE,
                            kernel="gaussian") 
```

```{r}
plot(kde_wp_functional_bw)
```

```{r}
bw <- bw.diggle(wp_functional_ppp)
bw
```

```{r}
wp_functional_ppp.km <- rescale(wp_functional_ppp, 1000, "km")
```

```{r}
kde_wp_functional_nigeria.bw <- density(wp_functional_ppp.km, sigma=bw.diggle, edge=TRUE, kernel="gaussian")
plot(kde_wp_functional_nigeria.bw)
```

```{r}
kde_wp_functional_nigeria.ppl <- density(wp_functional_ppp.km, 
                               sigma=bw.ppl, 
                               edge=TRUE,
                               kernel="gaussian")
par(mfrow=c(1,2))
plot(kde_wp_functional_nigeria.bw, main = "bw.diggle")
plot(kde_wp_functional_nigeria.ppl, main = "bw.ppl")
```

2.2 Derive kernel density maps of non-functional water points

```{r}
plot(wp_nonfunctional)
```

```{r}
summary(wp_nonfunctional)

```

```{r}
any(duplicated(wp_nonfunctional))
sum(multiplicity(wp_nonfunctional) > 1)
```

```{r}
library(tmap)
wp_non_func <- as_Spatial(wp_nonfunctional)
wp_non_func
```

```{r}
wp_n_f_sp <- as(wp_non_func, "SpatialPoints")
wp_n_f_sp
```

```{r}
wp_nonfunctional_ppp <- as(wp_n_f_sp, "ppp")
wp_nonfunctional_ppp
```

```{r}
plot(wp_nonfunctional_ppp)
```

```{r}
summary(wp_nonfunctional_ppp)
```

2.2.1 Handling duplicated points

```{r}
any(duplicated(wp_nonfunctional_ppp))

sum(multiplicity(wp_nonfunctional_ppp) > 1)
```

```{r}
kde_wp_nonfunctional_bw <- density(wp_nonfunctional_ppp,
                              sigma=bw.diggle,
                              edge=TRUE,
                            kernel="gaussian") 
```

2.3 Display the kernel density maps on openstreetmap of Osub State, Nigeria.

```{r}
plot(kde_wp_nonfunctional_bw)
```

```{}
```

### 2.4 Describe the spatial patterns revealed by the kernel density maps. Highlight the advantage of kernel density map over point map.

-   Kernel density maps depict a set of data points' geographic distribution and patterns. The maps depict the density of a certain variable, such as population, wealth, or crime, at various points within a geographic area. The density is estimated by applying a kernel function to each data point in the dataset, which is a mathematical representation of a smoothed density estimate.

    Kernel density maps can indicate spatial patterns such as:

    1\) Clustering: The presence of clusters or hotspots is indicated by a concentration of high density values in specific places.

    2\) Dispersal: The dispersion or scattering of low density values across a vast region, showing a dispersed or scattered pattern.

    3\) Gradients: Variations in density values throughout a geographic region that indicate the presence of a gradient or a gradual transition from high to low density levels.

    4\) Outliers: Points with considerably differing density values than the surrounding area, suggesting the existence of outliers.

    5\) Spatial autocorrelation: The presence of spatial autocorrelation is indicated by a link between the values of a variable in a geographic region and the values of that variable in surrounding areas.

-   These patterns can give vital insights on the distribution and concentration of numerous phenomena within a geographic area, such as population, economic activity, and crime. They can also help in decision-making and planning by identifying areas that require resources or attention.

-   Kernel density maps and point maps are both standard approaches for displaying the geographical distribution of data, but they differ in important ways.

    The following are some advantages of kernel density maps over point maps:

    1\) Smoothing: Kernel density maps smooth down the raw data points to highlight the underlying spatial patterns, whereas point maps merely depict the raw data points, resulting in a crowded and difficult-to-interpret map in some cases.

    2\) Density representation: When compared to point maps, kernel density maps depict the density of a variable at each position, offering a more thorough and nuanced view of the geographical distribution of data.

    3\) Better depiction of low-data-density areas: Kernel density maps can properly reflect low-data-density areas, but point maps may not offer a good image of the spatial distribution in these areas.

    4\) Kernel density maps can be more visually appealing than point maps because they are more intuitive and easier to read.

-   Generally, kernel density maps can give a more full and accurate image of the spatial distribution and can aid in recognizing spatial patterns and correlations in the data. When deciding between kernel density maps and point maps, it is critical to examine the unique aims and context of the study.

# 3 Second-order Spatial Point Patterns Analysis

### 

3.1 Formulate the null hypothesis and alternative hypothesis and select the confidence level

The hypothesis and test are as follows:

Ho = The distribution of Functional Water Point and Non-Functional Water Point spatially independent.

H1= The distribution of Functional Water Point and Non-Functional Water Point are NOT at spatially independent.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001 (i.e. at 99.9% confident interval).

```{r}
WP_F_CK.csr <- envelope(wp_nonfunctional_ppp, Gest, nsim = 999)
```

```{r}
plot(WP_F_CK.csr)
```
